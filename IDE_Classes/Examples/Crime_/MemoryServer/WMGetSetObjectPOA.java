package MemoryServer;


/**
* MemoryServer/WMGetSetObjectPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from MemoryServer.idl
* Thursday, February 12, 2004 11:11:31 AM EST
*/

public abstract class WMGetSetObjectPOA extends org.omg.PortableServer.Servant
 implements MemoryServer.WMGetSetObjectOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("WMSetObject", new java.lang.Integer (0));
    _methods.put ("WMDeleteObject", new java.lang.Integer (1));
    _methods.put ("WMGetObject", new java.lang.Integer (2));
    _methods.put ("WMWaitForChange", new java.lang.Integer (3));
    _methods.put ("WMGetItem", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // MemoryServer/WMGetSetObject/WMSetObject
       {
         org.omg.CORBA.Any obj = in.read_any ();
         String name = in.read_string ();
         this.WMSetObject (obj, name);
         out = $rh.createReply();
         break;
       }

       case 1:  // MemoryServer/WMGetSetObject/WMDeleteObject
       {
         String name = in.read_string ();
         this.WMDeleteObject (name);
         out = $rh.createReply();
         break;
       }

       case 2:  // MemoryServer/WMGetSetObject/WMGetObject
       {
         int tin = in.read_long ();
         org.omg.CORBA.IntHolder tmax = new org.omg.CORBA.IntHolder ();
         org.omg.CORBA.StringHolder on = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.AnyHolder obj = new org.omg.CORBA.AnyHolder ();
         this.WMGetObject (tin, tmax, on, obj);
         out = $rh.createReply();
         out.write_long (tmax.value);
         out.write_string (on.value);
         out.write_any (obj.value);
         break;
       }

       case 3:  // MemoryServer/WMGetSetObject/WMWaitForChange
       {
         int ti = in.read_long ();
         this.WMWaitForChange (ti);
         out = $rh.createReply();
         break;
       }

       case 4:  // MemoryServer/WMGetSetObject/WMGetItem
       {
         int index = in.read_long ();
         org.omg.CORBA.StringHolder name = new org.omg.CORBA.StringHolder ();
         this.WMGetItem (index, name);
         out = $rh.createReply();
         out.write_string (name.value);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:MemoryServer/WMGetSetObject:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public WMGetSetObject _this() 
  {
    return WMGetSetObjectHelper.narrow(
    super._this_object());
  }

  public WMGetSetObject _this(org.omg.CORBA.ORB orb) 
  {
    return WMGetSetObjectHelper.narrow(
    super._this_object(orb));
  }


} // class WMGetSetObjectPOA
